#!/usr/bin/python
# Author    : Peter van Arkel <p.vanarkel@gmail.com
# Date      : 20130122

import sys
import MySQLdb as sql
import argparse

conf_server = 'localhost'
conf_user = 'fail2ban'
conf_pass = 'f41l2b4n'
conf_db = 'fail2ban'

def ban(name,protocol,port,ip):
    try:
        conn = sql.connect(conf_server, conf_user, conf_pass, conf_db);
        cur = conn.cursor()
        cur.execute("""INSERT INTO fail2ban (name, protocol, port, ip) VALUES (%s, %s, %s, %s)""", (name, protocol, port, ip))
    except sql.Error, e:
        print "Error %d: %s" % (e.args[0],e.args[1])
        sys.exit(1)
    finally:
        if conn:
            conn.close()

def unban(name,protocol,port,ip):
    try:
        conn = sql.connect(conf_server, conf_user, conf_pass, conf_db);
        cur = conn.cursor()
        cur.execute("""DELETE FROM fail2ban WHERE name=%s AND protocol=%s AND port=%s AND ip=%s  """, (name, protocol, port, ip))
    except sql.Error, e:
        print "Error %d: %s" % (e.args[0],e.args[1])
        sys.exit(1)
    finally:
        if conn:
            conn.close()

def list(name):
    try: 
        conn = sql.connect(conf_server, conf_user, conf_pass, conf_db);
        cur = conn.cursor()
        if name == 'all':
            cur.execute("""SELECT * FROM fail2ban ORDER BY name DESC LIMIT 50""")
        else:
            cur.execute("""SELECT * FROM fail2ban WHERE name=%s ORDER BY ip DESC LIMIT 50""", (name))
    except:
        print "Error %d: %s" % (e.args[0],e.args[1])
        sys.exit(1)
    finally:
        if conn:
            conn.close()

parser = argparse.ArgumentParser(
    description='f2b-watcher',
    prog='f2b-watcher',
    usage='%(prog)s [-h]',
    )
action = parser.add_mutually_exclusive_group()
action.add_argument('--ban', nargs=4, help="")
action.add_argument('--unban', nargs=4, help="")
action.add_argument('--list', nargs='?', help="")
args = parser.parse_args()

if len(sys.argv) <= 1:
    print parser.print_help()
elif sys.argv[1] == '--ban':
    ban(sys.argv[2], sys.argv[3], sys.argv[4], sys.argv[5])
elif sys.argv[1] == '--unban':
    unban(sys.argv[2], sys.argv[3], sys.argv[4], sys.argv[5])
elif sys.argv[1] == '--list':
    if sys.argv[2] is None:
        list('all')
    elif sys.argv[2] is not None:
        list(sys.argv[2])
else:
    print parser.print_help()
